#!/bin/bash

#
# Copyright 2022 Juicedata Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

print_usage() {
  echo "Usage:"
  echo "    $0 COMMAND [OPTIONS]"
  echo "COMMAND:"
  echo "    help"
  echo "        Display this help message."
  echo "    install"
  echo "        Install JuiceFS CSI Driver in webhook mode."
  echo "    print"
  echo "        Print YAMLs of JuiceFS CSI Driver in webhook mode."
}

function gen_webhook_manifests() {
  need_cmd mktemp
  need_cmd openssl
  need_cmd curl

  K8S_SERVICE="sync-admission-webhook"
  K8S_NAMESPACE="kube-system"

  tmpdir=$(mktemp -d)

  ensure openssl genrsa -out ${tmpdir}/ca.key 2048 >/dev/null 2>&1
  ensure openssl req -x509 -new -nodes -key ${tmpdir}/ca.key -subj "/CN=${K8S_SERVICE}.${K8S_NAMESPACE}.svc" -days 1875 -out ${tmpdir}/ca.crt >/dev/null 2>&1
  ensure openssl genrsa -out ${tmpdir}/server.key 2048 >/dev/null 2>&1

  cat <<EOF >${tmpdir}/csr.conf
[req]
prompt = no
req_extensions = v3_req
distinguished_name = dn
[dn]
CN = ${K8S_SERVICE}.${K8S_NAMESPACE}.svc
[v3_req]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names
[alt_names]
DNS.1 = ${K8S_SERVICE}
DNS.2 = ${K8S_SERVICE}.${K8S_NAMESPACE}
DNS.3 = ${K8S_SERVICE}.${K8S_NAMESPACE}.svc
EOF

  ensure openssl req -new -key ${tmpdir}/server.key -out ${tmpdir}/server.csr -config ${tmpdir}/csr.conf >/dev/null 2>&1
  ensure openssl x509 -req -in ${tmpdir}/server.csr -CA ${tmpdir}/ca.crt -CAkey ${tmpdir}/ca.key -CAcreateserial -out ${tmpdir}/server.crt -days 1875 -extensions v3_req -extfile ${tmpdir}/csr.conf >/dev/null 2>&1

  TLS_KEY=$(openssl base64 -A -in ${tmpdir}/server.key)
  TLS_CRT=$(openssl base64 -A -in ${tmpdir}/server.crt)
  CA_BUNDLE=$(openssl base64 -A -in ${tmpdir}/ca.crt)

  # webhook.yaml start
  cat <<\EOF >${tmpdir}/webhook.yaml
# DO NOT EDIT: generated by 'kustomize build deploy'
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-external-node-service-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-external-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - watch
  - patch
  - delete
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - patch
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node-service-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-csi-external-node-service-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-external-provisioner-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWl1Z0F3SUJBZ0lVQkRSQ2VsTnVaWHdYZzk2QjdyU3NOTDZVSTR3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EazBNVEEzV2hjTk1qa3dNVEl4TURrME1UQTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWRsZjV0end4SUxoMXB6Rml0ZXV4dDhFTHRUQm9MOQpXenZIbzJ6RWh6MTI0Zlc3TFlrdEVFb1daVkF1bXNOUFlncmZXbUR0MlFJbitPOW9jN1RXUUpVM29kR1haSnIxClJwdnloVHNoRnRTZVdZM3pwNExsK2xyc2VSaFNTWFhTVVkzeU9NZlpRdTNpS01yaFFCYk5Camk2bjdRaWxrY24KbFN6MVh3dFkvcm04WUVwS3VscEZpWlZHekxwcnV4dWN1NE90NVloQTFQbC9TVjB0ZWNrNjFYNjI4MjBUdksvUwpEK1JsbUIrMzZlb2ZVcEdJTmpJR05pOGhkUkVzbnJlR3loMW5hUnJ0TjI0NTh3UlNSeW13RkxYTUlyaTJjelZRCmk5dnJkYVJCdTFjY1BsTW9paXRDNUxSVHhKUUpHeCsxd1htRHVBdzNEb2RqcnZyNTgwam11UTBDQXdFQUFhTlQKTUZFd0hRWURWUjBPQkJZRUZJUnMvL1htQVZmWTh4T29LTmtLeUU0WEUxQlFNQjhHQTFVZEl3UVlNQmFBRklScwovL1htQVZmWTh4T29LTmtLeUU0WEUxQlFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUw5MCtSYUhxNGRhUUN2NFMybGtwclFKQXdTK3FFOG93RDZiMjBpOW82YWtVM29qWHFjcEJwaEUKSTJ1TEpDZTU4RXV2QnhmZy9LcUFaSit4cjdzSTVQWGtOeVRTQU1TQnRqaktpQ0dCTzRBSzFCbmJQKzk4U2g1TwpGVXpuZ0tDVFY1dzFDLzd0ZnpVOTQ1ZXZPM1pXQ1JhY2gyOStIZEMza0xsbkUyMnIrMGVtU3BaaURVWklPMUxLCjJTVWZOUi9aYVQ1OXYwR1ZURWZkbDF3YjJ5Y1ZWbm54OWM2U2tyZ0lmbWh6enFVVkRpUVVyVWhoZ1lERDA1MXgKS210RWlFMU1UcEc3QmV5R0lVMmtkbW1DZk5QdHBwRmNtaXpmSjFHYXorcCtyWFQ0ZUNqOFFXSWlwUUdwR0ZnYwpuY0JwMGdFaWc2aGh3VzY2K3RqMUFNdnZDL1ducGo4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrRENDQW5pZ0F3SUJBZ0lVYmgxOUN4OVdUUG5LN3plWG5tdGN2c3YzZFJVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EazBNVEEzV2hjTk1qa3dNVEl4TURrME1UQTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSy83UkRaeGc2UmVyY3JDQS9malFMNUFUSnlKNlBrdwp5ZWJiMk11d1ExbzRPWEh5My9rMmUzUWVNNHhWeFZONnByT1FIdjVDRThpNWxQeEZLWFptWXJrenJ5c25nVmUxClFUZ2o3QmRyQ1JrSGxVRkhqWnhaU3hqYUw3Q0F3M0Q0M3B4SkJEWVZBZktvL0YvNzFnWjQwb05YUHQ4aG1YMEoKRHN3cXFTVldsdm5tcFNVRDdDdFpqQ28rRFl3cEMwN2cySGxzbkxYeTdaVTJIMmlRajVaUFZxMzU5aW8vMWZEbgpYZkVTNFFraVdUdCtjellrWDJrZll3QU5oSUljcVlTOG1jZ1duYmxtK0pUMmtUVG9nMnp0T3EyOGpINkpHc2VwCmJvRmpjNWRCSFRJaHNMT3J1bHdidVRFcGtqZVpEMk9vV1doRElVd2U0dzFkaGhwOGQwenlZc3NDQXdFQUFhT0IKbnpDQm5EQUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjRApBVEJ0QmdOVkhSRUVaakJrZ2haemVXNWpMV0ZrYldsemMybHZiaTEzWldKb2IyOXJnaUp6ZVc1akxXRmtiV2x6CmMybHZiaTEzWldKb2IyOXJMbXQxWW1VdGMzbHpkR1Z0Z2laemVXNWpMV0ZrYldsemMybHZiaTEzWldKb2IyOXIKTG10MVltVXRjM2x6ZEdWdExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBWWNtRzcxSkZwSHNVQWU0bgpPVTkyRlhRR3hCaEFIRWwwaUlrZXI3MjJ3TGhGWEZoUXRtcTY5WkxMRDFWWUVoWXBZMzZyNzhwVlJzZjEvcFFkCkhyUXhjaXYwZFArRERHZUoyTk94WktkaFJqaUU0R3lpOHAwYWpXTHlnRlRTMXVrL1VHKzZtQWE5UDFYVjBTbk4KQ29CTW1LMSt5bGtVZWNRMU92NVRtL3ZldE5HS1VRbHlUNDRYQ003ZHkxZ0Q2cjlWbFhsT3AzYUh2a2dWTGErYgpodS9RSjZjRk9PcHFpMWtHWVI2V3FkMWpZY2R4NXMxR1FuTEgrcnNXSkxORG5rK2p3VXo3QVNvQ3Q2RDhPUm9LCitDbFRIQUxaQnVwNzF3YkFBLzVRbyt3ZnFqWERCenhkT21NNG5ORVRXamk5TE4xNHBwREVjdUNkRjcrODJvcDQKT0hFam5nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBci90RU5uR0RwRjZ0eXNJRDkrTkF2a0JNbklubytUREo1dHZZeTdCRFdqZzVjZkxmCitUWjdkQjR6akZYRlUzcW1zNUFlL2tJVHlMbVUvRVVwZG1aaXVUT3ZLeWVCVjdWQk9DUHNGMnNKR1FlVlFVZU4KbkZsTEdOb3ZzSUREY1BqZW5Fa0VOaFVCOHFqOFgvdldCbmpTZzFjKzN5R1pmUWtPekNxcEpWYVcrZWFsSlFQcwpLMW1NS2o0TmpDa0xUdURZZVd5Y3RmTHRsVFlmYUpDUGxrOVdyZm4yS2ovVjhPZGQ4UkxoQ1NKWk8zNXpOaVJmCmFSOWpBQTJFZ2h5cGhMeVp5QmFkdVdiNGxQYVJOT2lEYk8wNnJieU1mb2theDZsdWdXTnpsMEVkTWlHd3M2dTYKWEJ1NU1TbVNONWtQWTZoWmFFTWhUQjdqRFYyR0dueDNUUEppeXdJREFRQUJBb0lCQUdDM1pVdk9veHpJOUJiRQovazFVVmhhNVcrR0VZY2ZpS25SNFN2UFhFWTBaN1doVXBRZGdEQVZMTytWYWxqSkU3QzB2ZmZrYTg2aVRaZkFuClNweEp0T1E0SllOQUdQUE5KK1RreVRJdG56aGtWSUVtQkF2emZ6UlBaWHBKcWlBQ2hzVzUwMWl0dnY1UUpUUFQKUWxNWVFBbnkveGkrYkk2dFZiYWJrNDV6d2xIZ3FITTRpNXZJM1RiSElwMHI0Y2Q5M3VPSzdzclBlRmZUSlhkUQpnb3pMbXlreFp4NmlmdFJWSDZuVnZYYjdVV3o0YVdzY3ZSbVlGTHBkWjZ0aDlsRDZNRGVXTWc0aXFYNEdqUzN0Cmt1VTdtZmtsZ0pEbytjWEt0ODZuK0lBTG96dXVEb092dVZNaExJSG5Uc2UrcnFnZ1NVSGpBcndMSXBTLytBNHcKMXlLYzZVRUNnWUVBNldMRzRnWDV3ZHE1SDJOVW1SeTduTzNuOVdLZkNreTk5SVp0MlF6TmEwb2xyZ3BDL21oQgo4eUdaaWtoRElpWERhN0UrY0xkTm5HdWdZWXF3OVNKK1pxSUN2bFAvdmhub1VEcm42MUhvbjZEMjFrcFpXREtDCllkNUdTS2VmK0xuTFN3OHhOVnFjY1JUVmNBS1ZIRzhkODZ0WHJwTkdGRzNzNmxIU3UzYUM4aEVDZ1lFQXdRaU4KdEZyOWYvZldnK0tXNXU5U21zTVNkaEpyYTN1dEJqdkd1bDJ1WW5wL2tsZUFHNnpXa3JnOGk3cGV2RzlRdlgxOQpzUU5LeGNDTWtPTHBNcUsvWU5aMHNiKy8yUjNSaEs0RVplQzM0TXhUSURCV1ovaFQ4WXd2d0x3YzU0VS85dFptCmYxczcwYjk2RWFPVm04U29TOUtVNXUvMXQxcCtIeExSSU96YUt4c0NnWUFjcFU4Yjl2Zk0zM2ZSYm5PM3gxc1AKeS9Pb25zNCtpV1RYV3BpcEIzVS9NZjZsK2dSM0RYenF4cmo5ekJqUlhDazhVcWtEVkx4bDhwL2cyUkVYUllDVwpRRlJ0NEFtSDM4NHY2c3NFaXkwdVNxZUJiZWJCZUpHZ1NaUCszdlEzcHpaWXBDaTZEOEViOEI2eWZONm9lc3NHCldZV05tKzRDRyt2MFpzNml5ODBPd1FLQmdRQ3hJbE0rbkh5aE1HRm1Gc2pZMCtaZVpBR04zYXM3TDN1QUM5eDUKNmp0NjNPUXgreDl3eGZNRkloRlZPMGx4NjBnUkNwWUxtSFRGOE1KTXRoeStQWUFXc2RUVnc1cWQ5dkhycWZBWgpPTlFqY2Z3WnZxR2J1TkgzQnVoUEdaQUFtRk14QkY5OElORk0wVU9INmpBQWg3N1VEVUpjaFBoYkw2d3FnWTdzCmdzeFUzd0tCZ0RhcUtMc3N3ZG03OVNrdHdabXFwZjJtd2IrLzNwR1lCNWlRYWhqV1cwYkFDM2RGMlRpTC9FMVUKUWp4clJNRDVsZUsyQXRsbEZyQURsT2JqL0NoSXBiU0EyR3pnTnRLaUtFM21QUXFNVTZ5N3VqVUIvY0JsNlRYWQoxaVpzNEFRaHBpL0x2TFlrY2I1SmEwdXBsZHk0MHZZTEQydFRoUlBvT0JjZEozdDJSeUo1Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook-secret
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-webhook-certs
  namespace: kube-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9444
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-controller
  namespace: kube-system
spec:
  ports:
  - name: sync
    port: 80
    targetPort: 9446
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: juicefs-csi-controller
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  serviceName: juicefs-csi-controller
  template:
    metadata:
      labels:
        app: juicefs-csi-controller
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --leader-election
        - --v=6
        - --cv-webhook=true
        - --mixture=cloud
        env:
        - name: JUICEFS_CE_MOUNT_IMAGE
          value: S_MOUNT_IMAGE
        - name: JUICEFS_SYNC_WAIT_IMAGE
          value: S_WAIT_IMAGE
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        - name: ENABLE_APISERVER_LIST_CACHE
          value: "true"
        image: juicedata/juicefs-csi-driver:v0.22.1
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --leader-election
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-provisioner:v2.2.2
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --v=2
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-resizer:v1.8.0
        name: csi-resizer
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: k8s.dockerproxy.com/sig-storage/livenessprobe:v2.6.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: juicefs-csi-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
      - name: webhook-certs
        secret:
          secretName: juicefs-webhook-certs
  volumeClaimTemplates: []
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: juicefs-csi-node
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  template:
    metadata:
      labels:
        app: juicefs-csi-node
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --v=6
        - --enable-manager=true
        env:
        - name: JUICEFS_CE_MOUNT_IMAGE
          value: S_MOUNT_IMAGE
        - name: JUICEFS_SYNC_WAIT_IMAGE
          value: S_WAIT_IMAGE
        - name: CSI_ENDPOINT
          value: unix:/csi/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBELET_PORT
          value: "10250"
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        - name: ENABLE_APISERVER_LIST_CACHE
          value: "true"
        image: juicedata/juicefs-csi-driver:v0.22.1
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm /csi/csi.sock
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /dev
          name: device-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        - --v=5
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/csi-plugins/csi.juicefs.com/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.5.0
        name: node-driver-registrar
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: k8s.dockerproxy.com/sig-storage/livenessprobe:v2.6.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      serviceAccount: juicefs-csi-node-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /var/lib/kubelet/csi-plugins/csi.juicefs.com/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
        name: registration-dir
      - hostPath:
          path: /dev
          type: Directory
        name: device-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: csi.juicefs.com
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWl1Z0F3SUJBZ0lVQkRSQ2VsTnVaWHdYZzk2QjdyU3NOTDZVSTR3d0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EazBNVEEzV2hjTk1qa3dNVEl4TURrME1UQTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWRsZjV0end4SUxoMXB6Rml0ZXV4dDhFTHRUQm9MOQpXenZIbzJ6RWh6MTI0Zlc3TFlrdEVFb1daVkF1bXNOUFlncmZXbUR0MlFJbitPOW9jN1RXUUpVM29kR1haSnIxClJwdnloVHNoRnRTZVdZM3pwNExsK2xyc2VSaFNTWFhTVVkzeU9NZlpRdTNpS01yaFFCYk5Camk2bjdRaWxrY24KbFN6MVh3dFkvcm04WUVwS3VscEZpWlZHekxwcnV4dWN1NE90NVloQTFQbC9TVjB0ZWNrNjFYNjI4MjBUdksvUwpEK1JsbUIrMzZlb2ZVcEdJTmpJR05pOGhkUkVzbnJlR3loMW5hUnJ0TjI0NTh3UlNSeW13RkxYTUlyaTJjelZRCmk5dnJkYVJCdTFjY1BsTW9paXRDNUxSVHhKUUpHeCsxd1htRHVBdzNEb2RqcnZyNTgwam11UTBDQXdFQUFhTlQKTUZFd0hRWURWUjBPQkJZRUZJUnMvL1htQVZmWTh4T29LTmtLeUU0WEUxQlFNQjhHQTFVZEl3UVlNQmFBRklScwovL1htQVZmWTh4T29LTmtLeUU0WEUxQlFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUw5MCtSYUhxNGRhUUN2NFMybGtwclFKQXdTK3FFOG93RDZiMjBpOW82YWtVM29qWHFjcEJwaEUKSTJ1TEpDZTU4RXV2QnhmZy9LcUFaSit4cjdzSTVQWGtOeVRTQU1TQnRqaktpQ0dCTzRBSzFCbmJQKzk4U2g1TwpGVXpuZ0tDVFY1dzFDLzd0ZnpVOTQ1ZXZPM1pXQ1JhY2gyOStIZEMza0xsbkUyMnIrMGVtU3BaaURVWklPMUxLCjJTVWZOUi9aYVQ1OXYwR1ZURWZkbDF3YjJ5Y1ZWbm54OWM2U2tyZ0lmbWh6enFVVkRpUVVyVWhoZ1lERDA1MXgKS210RWlFMU1UcEc3QmV5R0lVMmtkbW1DZk5QdHBwRmNtaXpmSjFHYXorcCtyWFQ0ZUNqOFFXSWlwUUdwR0ZnYwpuY0JwMGdFaWc2aGh3VzY2K3RqMUFNdnZDL1ducGo4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: sync-admission-webhook
      namespace: kube-system
      path: /sync/inject-v1-pod
  failurePolicy: Fail
  name: sync.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      data-set-sync/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
EOF
  # webhook.yaml end

  cat ${tmpdir}/webhook.yaml | sed -e "s/CA_BUNDLE/$CA_BUNDLE/g" -e "s/TLS_KEY/$TLS_KEY/g" -e "s/TLS_CRT/$TLS_CRT/g"
}

function gen_webhook_manifests_with_cert_manager() {
  tmpdir=$(mktemp -d)
  # webhook-with-certmanager.yaml start
  cat <<\EOF >${tmpdir}/webhook-with-certmanager.yaml
# DO NOT EDIT: generated by 'kustomize build'
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-external-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - patch
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-external-provisioner-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9444
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9447
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-controller
  namespace: kube-system
spec:
  ports:
  - name: sync
    port: 80
    targetPort: 9446
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: juicefs-csi-controller
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  serviceName: juicefs-csi-controller
  template:
    metadata:
      labels:
        app: juicefs-csi-controller
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --leader-election
        - --v=5
        - --webhook=true
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        image: juicedata/juicefs-csi-driver:v0.22.1
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --enable-leader-election
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-provisioner:v1.6.0
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --v=2
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-resizer:v1.0.1
        name: csi-resizer
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: quay.io/k8scsi/livenessprobe:v1.1.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: juicefs-csi-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
      - name: webhook-certs
        secret:
          secretName: juicefs-webhook-certs
  volumeClaimTemplates: []
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: juicefs-cert
  namespace: kube-system
spec:
  dnsNames:
  - juicefs-admission-webhook
  - juicefs-admission-webhook.kube-system
  - juicefs-admission-webhook.kube-system.svc
  duration: 43800h
  issuerRef:
    name: juicefs-selfsigned
  secretName: juicefs-webhook-certs
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: juicefs-selfsigned
  namespace: kube-system
spec:
  selfSigned: {}
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: csi.juicefs.com
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-system/juicefs-cert
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: CA_BUNDLE
    service:
      name: juicefs-admission-webhook
      namespace: kube-system
      path: /juicefs/inject-v1-pod
  failurePolicy: Fail
  name: sidecar.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      juicefs.com/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: CA_BUNDLE
    service:
      name: sync-admission-webhook
      namespace: kube-system
      path: /sync/inject-v1-pod
  failurePolicy: Fail
  name: sync.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      juicefs.com/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
EOF
  # webhook-with-certmanager.yaml end

  cat ${tmpdir}/webhook-with-certmanager.yaml | sed -e "s/CA_BUNDLE/Cg==/g"
}

need_cmd() {
  if ! check_cmd "$1"; then
    err "need '$1' (command not found)"
  fi
}

check_cmd() {
  command -v "$1" >/dev/null 2>&1
}

ensure() {
  if ! "$@"; then err "command failed: $*"; fi
}

function main() {
  if [[ $# -eq 0 ]]; then
    print_usage
    exit 1
  fi

  action="help"
  withcertmanager="false"

  while [[ $# -gt 0 ]]; do
    case $1 in
    -h | --help | "-?")
      print_usage
      exit 0
      ;;
    install | help)
      action=$1
      ;;
    print | help)
      action=$1
      ;;
    gen-dev | help)
      action=$1
      ;;
    -c|--with-certmanager)
      withcertmanager="true"
      ;;
    *)
      echo "Error: unsupported option $1" >&2
      print_usage
      exit 1
      ;;
    esac
    shift
  done

  if [[ ${withcertmanager} == "true" ]]
  then
    case ${action} in
    install)
      gen_webhook_manifests_with_cert_manager | kubectl apply -f -
      ;;
    print)
      gen_webhook_manifests_with_cert_manager | cat
      ;;
    help)
      print_usage
      ;;
    esac
  else
    case ${action} in
    install)
      gen_webhook_manifests | kubectl apply -f -
      ;;
    print)
      gen_webhook_manifests | cat
      ;;
    gen-dev)
          gen_webhook_manifests | cat >./deploy-dev/k8s.yaml
          ;;
    help)
      print_usage
      ;;
    esac
  fi
}

main "$@"
