#!/bin/bash

#
# Copyright 2022 Juicedata Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

print_usage() {
  echo "Usage:"
  echo "    $0 COMMAND [OPTIONS]"
  echo "COMMAND:"
  echo "    help"
  echo "        Display this help message."
  echo "    install"
  echo "        Install JuiceFS CSI Driver in webhook mode."
  echo "    print"
  echo "        Print YAMLs of JuiceFS CSI Driver in webhook mode."
}

function gen_webhook_manifests() {
  need_cmd mktemp
  need_cmd openssl
  need_cmd curl

  K8S_SERVICE="sync-admission-webhook"
  K8S_NAMESPACE="kube-system"

  tmpdir=$(mktemp -d)

  ensure openssl genrsa -out ${tmpdir}/ca.key 2048 >/dev/null 2>&1
  ensure openssl req -x509 -new -nodes -key ${tmpdir}/ca.key -subj "/CN=${K8S_SERVICE}.${K8S_NAMESPACE}.svc" -days 1875 -out ${tmpdir}/ca.crt >/dev/null 2>&1
  ensure openssl genrsa -out ${tmpdir}/server.key 2048 >/dev/null 2>&1

  cat <<EOF >${tmpdir}/csr.conf
[req]
prompt = no
req_extensions = v3_req
distinguished_name = dn
[dn]
CN = ${K8S_SERVICE}.${K8S_NAMESPACE}.svc
[v3_req]
basicConstraints = CA:FALSE
keyUsage = nonRepudiation, digitalSignature, keyEncipherment
extendedKeyUsage = serverAuth
subjectAltName = @alt_names
[alt_names]
DNS.1 = ${K8S_SERVICE}
DNS.2 = ${K8S_SERVICE}.${K8S_NAMESPACE}
DNS.3 = ${K8S_SERVICE}.${K8S_NAMESPACE}.svc
EOF

  ensure openssl req -new -key ${tmpdir}/server.key -out ${tmpdir}/server.csr -config ${tmpdir}/csr.conf >/dev/null 2>&1
  ensure openssl x509 -req -in ${tmpdir}/server.csr -CA ${tmpdir}/ca.crt -CAkey ${tmpdir}/ca.key -CAcreateserial -out ${tmpdir}/server.crt -days 1875 -extensions v3_req -extfile ${tmpdir}/csr.conf >/dev/null 2>&1

  TLS_KEY=$(openssl base64 -A -in ${tmpdir}/server.key)
  TLS_CRT=$(openssl base64 -A -in ${tmpdir}/server.crt)
  CA_BUNDLE=$(openssl base64 -A -in ${tmpdir}/ca.crt)

  # webhook.yaml start
  cat <<\EOF >${tmpdir}/webhook.yaml
# DO NOT EDIT: generated by 'kustomize build deploy-dev'
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-external-node-service-role
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - nodes/proxy
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-external-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - watch
  - patch
  - delete
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - patch
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node-service-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-csi-external-node-service-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-node-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-external-provisioner-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWl1Z0F3SUJBZ0lVUmRLQWo5S0hRUHJYN2FlWlpYb2tNZytNRUkwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EZ3dNVFEzV2hjTk1qa3dNVEl4TURnd01UUTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFkxTUxMNk5qOHFEbDJlb240MWNyS3NLOVdoRlpaNApGNncyYlBvZytIdjZvQlRVYWJNVzJOcmZocHdYaWxES2orMGYwUFdubEJJWm54OFhNakVGSE8rOW9mdHlDV0RGCjBzZ1JZMk1NS1IvNEh6bGt0d0wxR0lmTHFlRnRGTzh4eWRYSjNXLzQ4RGszZTV1NGl3MVpOMXFSV09GbERNUUgKU09ia1dRYXN1bnp5cGRIb2luZHUvd0t3bnh4dnhneS81N01YMytkOTlTbkhJazBkU09GYml1clV6S2ZQelBCWgpmcndnMXgvU1E3c3BBMlh0RDdyV3JkeGM2MUVXbGV2czVySHVYNDJ3WGlURTV3a3cxenBXd3ZDSTNFcSt0Z3hQCkZZK3pkUWUvWVNPSFBtZ01kL2R6V1JkRG9UWGFmTTVSdEhKclZKb1ZrMHRrTVNsejVZSFhzZGtDQXdFQUFhTlQKTUZFd0hRWURWUjBPQkJZRUZBTmpKOGp5bmd1a0kzK3NzRzdFTldJejNOVzFNQjhHQTFVZEl3UVlNQmFBRkFOagpKOGp5bmd1a0kzK3NzRzdFTldJejNOVzFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUFmanlaWWh1TWtOM0VIczdqNTV4enZBSWd3UklncUNXUEF2NU82L0o2TW8yNG4yamZGM2cwTDMKMU1nTWUvNVF2U3hsVkFYMTRyZVpHS3NNaE83dEhxOVhQbzV5NEdMQ0g2Uzg5U0xaSmhHbkJQc2FiVkNkWkthVgpvRWpROEw4T0Y0a1l2VDBNcTF0VHgrdHRuMmFlcDlRS2JNZ2x6Z2NWbHJxQlU5RzR4VnRJMGM4dklDclMxZDhJCmJuS1RyamdhbjBFN2lZM1Y4cTJSQ2dmb3pIMGpNVWo1SGVxcENycVdva1BUUnBpVlNZb3JkZmlHZjV0TE1LZmQKWFRsWklEMmJ3UHhML2d2TmYwdFRseFZTK3YycnVFN3cxbTlzTkxYaWdMQW15U0lGSEQ2c2JiTTVoaEFCaUtWRwpWUm1RcUcxN0RISnZLWFhxRklrbzJ0Y2o3aGhTUFo4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURrRENDQW5pZ0F3SUJBZ0lVVVlNVmJ4WUp6RTFML21mVjFyMTVkb0prL21Vd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EZ3dNVFEzV2hjTk1qa3dNVEl4TURnd01UUTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTG9mV2gwbXp3bXdxdVNUYU1VNUVBNjNjdWpoTlg5NgpCeUpQZXMySFBMekZXbzFoaUdRYXRtVjRhbnVXMVpwRzdWTnJmWE96YUorUGlYT2cyTTJLaEFQMVVuVHIxQlpuCkpsSjh6SW9yd2JDbmtmOFN4UXpkbVlXS2FSM1Z1VU5DRldrbEhNQmJKc1RCQVpwaTNDQ3RvVGRyUnNJNWdvQkYKVm12RVZubFVURDd4VVFIbm1aY0dXRk1IR1ZoWHRMUC9pUE8zL29EL3luS2hzclUxbGxSeEt3KzlJYUJyVFowUwpvbWQwZUt2RXE3RFdtakNKdWhHNXg1MUlxb05LOG9hcHJVYVF3blRxMGtGY1htcXNIQWJ0aVBiY2xUTjJNK2h5CjYya0luM0JhdWptdy9JUTlTUUpHOUFoZVhmK0NZT1FZS3d1Z29MM2VvMU8wTlBRTWVKUXUrQUVDQXdFQUFhT0IKbnpDQm5EQUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lGNERBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjRApBVEJ0QmdOVkhSRUVaakJrZ2haemVXNWpMV0ZrYldsemMybHZiaTEzWldKb2IyOXJnaUp6ZVc1akxXRmtiV2x6CmMybHZiaTEzWldKb2IyOXJMbXQxWW1VdGMzbHpkR1Z0Z2laemVXNWpMV0ZrYldsemMybHZiaTEzWldKb2IyOXIKTG10MVltVXRjM2x6ZEdWdExuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBZUNFdnorYi9GUE02TVJ6cgpncno5UUJRWHp6RjVrV3hXY0Y0aVlPUmtGdFB6azIwV1hyYTdjdXJMYzZRaExxazhxSXBNQm1TZW5MdnhIY2FaCmZLak9BWW5jWTFidFVkcjJza3EvVENnNkE4bnlQcFd3NkpjdXlneWdFN1pyajFiMndCWGhBeUNQdEtDWlhDOEkKbmhKczhhOXI3ZUpmRklTa0tzeGovZlM0RVRyem1yV2lNQitUUy9ENjhTNW1uMENRMlAvWm9XME4xVTNOQm15WAoxdXJGaUpoTGI5c2xUYjZNUWpDaGpBb1VmSU9XREhNM25Nd1JCUmM4NXRtVzh5ZFZNZU9NNXBORHJ6L2Z6a1N4CldLazBTbk1mM0s4elU2WlBML3BjSy9ERGZHMURyeGRxTE1abnRaWDBONlEzV1J5SVRFaVlsV2haVWp1WW8xaTIKaTc2MUpBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdWg5YUhTYlBDYkNxNUpOb3hUa1FEcmR5Nk9FMWYzb0hJazk2elljOHZNVmFqV0dJClpCcTJaWGhxZTViVm1rYnRVMnQ5YzdOb240K0pjNkRZellxRUEvVlNkT3ZVRm1jbVVuek1paXZCc0tlUi94TEYKRE4yWmhZcHBIZFc1UTBJVmFTVWN3RnNteE1FQm1tTGNJSzJoTjJ0R3dqbUNnRVZXYThSV2VWUk1QdkZSQWVlWgpsd1pZVXdjWldGZTBzLytJODdmK2dQL0tjcUd5dFRXV1ZIRXJENzBob0d0Tm5SS2laM1I0cThTcnNOYWFNSW02CkVibkhuVWlxZzByeWhxbXRScERDZE9yU1FWeGVhcXdjQnUySTl0eVZNM1l6NkhMcmFRaWZjRnE2T2JEOGhEMUoKQWtiMENGNWQvNEpnNUJnckM2Q2d2ZDZqVTdRMDlBeDRsQzc0QVFJREFRQUJBb0lCQURIanU0VDY1UjVFMDlvSApSVnN3UzRTV1dkL2dsaldBWVM4cVBOR2d3WUFjS29TaE15MGFGL0FsRWUzazVZYkFJbGR0QmFpZzI1ZUJveWR5Cll3cmRhVHVpWTZMaG4rME5ZekZUTUlTTTdCTk5KNDVHMnJqeklYYXhQakg0R3Z2VFYrZmlRYzJ4NFRkMlFOYkEKVHg4WFM1S09WOTR5Q2pBVjVlOW5Kb0xKUE5MVjZVRFpqL3R3STBzeStRUTVzRjVySTRjcmxoN1VtYldLZU9MQQpaQzgvNkhrSTA4V2UydHJCZzdkY0xzNFpvWDBTU1NOMXphQy9jWitYZkViMldJblhIbHhIM2o2YjZ3T0ZVOExaClVRMDlkcUE0YWRudy9QN1oyem5scnVHTVBZWjRmaW5aY0Z0bi93VFJrRXlwblFVcUJrR1RqSFg4ZStkS0tDWXoKbkVEenRrRUNnWUVBNmgwVkJaVXpjWXVocjFXYjZCRVhSbnIvUmQrTjhnNXlhNGJQa0k5WTRnU3lBTmRuTjJOcwpnUSt0d2ZlbGRWZFRkeDQxbWNGa1IyWlhncTFtSmNaM1RsUUFOVDJIRkcrZkRkSVVSa09sRTJ5L3BMUzh3R2ZuCkwrNG1vZVlCRUJ0ZFlnMTNmdDdvc3l5RVloREZ0OGc2VHQ3SjBub3RQYzdya3E4anhGVjZTUWtDZ1lFQXk0VzUKS21tcTdxaHBHUTVXZXhJcHZHWEN2amh6c0NzZGN3Y0lqYjA1WmhLczNBMndOcXQ4Y2ZuVHRjOS9jVDRhcVdTQgpYNWhvNzMzbzdJU04wbm1qN3dJWWpUMFNGTVRIZ3Z4MWo3QlV0NEFoVDJxN241b0pLTHhZVXhnR2FML0s3anpsCk5KdndMZENiZm91S2xCemJZR1pZbXR2Q3ZXR2FxamgvR21SVlRUa0NnWUEwS3o3Zis1dDNGZkoxcTlJT0tLRFQKSjkxeXFKcHM4aU0xS3RsZUVWTnhLakt3VlUrKzIvejExWlNXd0tTeVBUOXdMOThwNEJxRWZwM0psUEpLUUt1ZApYTUtmR3BMYlR2UldsQlhJZ3BKcWZiVkc4cStOQUpwWDUrM2I3ZkVXc2NKaGN6Ykpvc3FnQXErTldzZDBhTDMxCmpWZlQrejNScENhQ2pWeWZCNTAwWVFLQmdHZkhObFlrTDU4bWpRRFR5TkZVdjZkcmxGUCs0Uzd4clVDY1U0WkMKK09QTm5ndFBoNDA1QUduMTVEaVBLQU1Na2ZmU1lnM20zNHRQZnRncjkwMWQ3WFBRYzhpQlhaanRobmFLV1QvOQp3QlVaNXVKaUlHNFAwNS9MK3BYVWFHQTlmRExqSmxVZk51ZUZ1ZVJiTHp5N1Fqbnp0amF3M0twSS9ON1RsQ3hYCkFSQXhBb0dBQytzWHpwekdkSXdsQ3pJUVk5LzBDcEVJVy9DZFk4djJvVzNPdDdrbC9POWRGMWg1RDdvSmlGOVgKYm0vbVpvMC9JQUNEZy84c21wVlRMM2ZUWkgyTmkwSDM2NEhtRlh3c3V4MEloaTdMUXBGMWc1TFlpd21SWXFCSApkS0JsSlViVUpYRmJmWnlxTkExeG85Slo1QXRpRlVYc0V0WmpkdW4rMElBd2tOVEo2bVE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook-secret
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-webhook-certs
  namespace: kube-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9444
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-controller
  namespace: kube-system
spec:
  ports:
  - name: sync
    port: 80
    targetPort: 9446
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: juicefs-csi-controller
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  serviceName: juicefs-csi-controller
  template:
    metadata:
      labels:
        app: juicefs-csi-controller
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --leader-election
        - --v=6
        - --cv-webhook=true
        - --mixture=cloud
        env:
        - name: JUICEFS_CE_MOUNT_IMAGE
          value: registry.cn-shenzhen.aliyuncs.com/fscomfs/mount:v1.1.0-cv
        - name: JUICEFS_SYNC_WAIT_IMAGE
          value: fscomfs/juicefs-csi-driver:dev-be776fc-dirty
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        - name: ENABLE_APISERVER_LIST_CACHE
          value: "true"
        image: fscomfs/juicefs-csi-driver:dev-be776fc-dirty
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --leader-election
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-provisioner:v2.2.2
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --v=2
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-resizer:v1.8.0
        name: csi-resizer
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: k8s.dockerproxy.com/sig-storage/livenessprobe:v2.6.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: juicefs-csi-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
      - name: webhook-certs
        secret:
          secretName: juicefs-webhook-certs
  volumeClaimTemplates: []
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-node
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: juicefs-csi-node
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  template:
    metadata:
      labels:
        app: juicefs-csi-node
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --v=6
        - --enable-manager=true
        env:
        - name: JUICEFS_CE_MOUNT_IMAGE
          value: registry.cn-shenzhen.aliyuncs.com/fscomfs/mount:v1.1.0-cv
        - name: JUICEFS_SYNC_WAIT_IMAGE
          value: fscomfs/juicefs-csi-driver:dev-be776fc-dirty
        - name: CSI_ENDPOINT
          value: unix:/csi/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: HOST_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: KUBELET_PORT
          value: "10250"
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        - name: ENABLE_APISERVER_LIST_CACHE
          value: "true"
        image: fscomfs/juicefs-csi-driver:dev-be776fc-dirty
        lifecycle:
          preStop:
            exec:
              command:
              - /bin/sh
              - -c
              - rm /csi/csi.sock
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/kubelet
          mountPropagation: Bidirectional
          name: kubelet-dir
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /dev
          name: device-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
        - --v=5
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: DRIVER_REG_SOCK_PATH
          value: /var/lib/kubelet/csi-plugins/csi.juicefs.com/csi.sock
        image: k8s.dockerproxy.com/sig-storage/csi-node-driver-registrar:v2.5.0
        name: node-driver-registrar
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
        - mountPath: /registration
          name: registration-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: k8s.dockerproxy.com/sig-storage/livenessprobe:v2.6.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: plugin-dir
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      serviceAccount: juicefs-csi-node-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - hostPath:
          path: /var/lib/kubelet
          type: Directory
        name: kubelet-dir
      - hostPath:
          path: /var/lib/kubelet/csi-plugins/csi.juicefs.com/
          type: DirectoryOrCreate
        name: plugin-dir
      - hostPath:
          path: /var/lib/kubelet/plugins_registry/
          type: Directory
        name: registration-dir
      - hostPath:
          path: /dev
          type: Directory
        name: device-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: csi.juicefs.com
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRekNDQWl1Z0F3SUJBZ0lVUmRLQWo5S0hRUHJYN2FlWlpYb2tNZytNRUkwd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01URXZNQzBHQTFVRUF3d21jM2x1WXkxaFpHMXBjM05wYjI0dGQyVmlhRzl2YXk1cmRXSmxMWE41YzNSbApiUzV6ZG1Nd0hoY05Nak14TWpBME1EZ3dNVFEzV2hjTk1qa3dNVEl4TURnd01UUTNXakF4TVM4d0xRWURWUVFECkRDWnplVzVqTFdGa2JXbHpjMmx2YmkxM1pXSm9iMjlyTG10MVltVXRjM2x6ZEdWdExuTjJZekNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTFkxTUxMNk5qOHFEbDJlb240MWNyS3NLOVdoRlpaNApGNncyYlBvZytIdjZvQlRVYWJNVzJOcmZocHdYaWxES2orMGYwUFdubEJJWm54OFhNakVGSE8rOW9mdHlDV0RGCjBzZ1JZMk1NS1IvNEh6bGt0d0wxR0lmTHFlRnRGTzh4eWRYSjNXLzQ4RGszZTV1NGl3MVpOMXFSV09GbERNUUgKU09ia1dRYXN1bnp5cGRIb2luZHUvd0t3bnh4dnhneS81N01YMytkOTlTbkhJazBkU09GYml1clV6S2ZQelBCWgpmcndnMXgvU1E3c3BBMlh0RDdyV3JkeGM2MUVXbGV2czVySHVYNDJ3WGlURTV3a3cxenBXd3ZDSTNFcSt0Z3hQCkZZK3pkUWUvWVNPSFBtZ01kL2R6V1JkRG9UWGFmTTVSdEhKclZKb1ZrMHRrTVNsejVZSFhzZGtDQXdFQUFhTlQKTUZFd0hRWURWUjBPQkJZRUZBTmpKOGp5bmd1a0kzK3NzRzdFTldJejNOVzFNQjhHQTFVZEl3UVlNQmFBRkFOagpKOGp5bmd1a0kzK3NzRzdFTldJejNOVzFNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdEUVlKS29aSWh2Y05BUUVMCkJRQURnZ0VCQUFmanlaWWh1TWtOM0VIczdqNTV4enZBSWd3UklncUNXUEF2NU82L0o2TW8yNG4yamZGM2cwTDMKMU1nTWUvNVF2U3hsVkFYMTRyZVpHS3NNaE83dEhxOVhQbzV5NEdMQ0g2Uzg5U0xaSmhHbkJQc2FiVkNkWkthVgpvRWpROEw4T0Y0a1l2VDBNcTF0VHgrdHRuMmFlcDlRS2JNZ2x6Z2NWbHJxQlU5RzR4VnRJMGM4dklDclMxZDhJCmJuS1RyamdhbjBFN2lZM1Y4cTJSQ2dmb3pIMGpNVWo1SGVxcENycVdva1BUUnBpVlNZb3JkZmlHZjV0TE1LZmQKWFRsWklEMmJ3UHhML2d2TmYwdFRseFZTK3YycnVFN3cxbTlzTkxYaWdMQW15U0lGSEQ2c2JiTTVoaEFCaUtWRwpWUm1RcUcxN0RISnZLWFhxRklrbzJ0Y2o3aGhTUFo4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: sync-admission-webhook
      namespace: kube-system
      path: /sync/inject-v1-pod
  failurePolicy: Fail
  name: sync.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      data-set-sync/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
EOF
  # webhook.yaml end

  cat ${tmpdir}/webhook.yaml | sed -e "s/CA_BUNDLE/$CA_BUNDLE/g" -e "s/TLS_KEY/$TLS_KEY/g" -e "s/TLS_CRT/$TLS_CRT/g"
}

function gen_webhook_manifests_with_cert_manager() {
  tmpdir=$(mktemp -d)
  # webhook-with-certmanager.yaml start
  cat <<\EOF >${tmpdir}/webhook-with-certmanager.yaml
# DO NOT EDIT: generated by 'kustomize build'
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-external-provisioner-role
rules:
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - watch
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - storage.k8s.io
  resources:
  - csinodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - get
  - create
  - update
  - patch
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - daemonsets
  verbs:
  - get
  - list
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - watch
  - list
  - delete
  - update
  - create
- apiGroups:
  - ""
  resources:
  - pods/exec
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: juicefs-external-provisioner-role
subjects:
- kind: ServiceAccount
  name: juicefs-csi-controller-sa
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9444
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
  namespace: kube-system
spec:
  ports:
  - name: https-rest
    port: 443
    targetPort: 9447
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-controller
  namespace: kube-system
spec:
  ports:
  - name: sync
    port: 80
    targetPort: 9446
  selector:
    app: juicefs-csi-controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-csi-controller
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      app: juicefs-csi-controller
      app.kubernetes.io/instance: juicefs-csi-driver
      app.kubernetes.io/name: juicefs-csi-driver
      app.kubernetes.io/version: master
  serviceName: juicefs-csi-controller
  template:
    metadata:
      labels:
        app: juicefs-csi-controller
        app.kubernetes.io/instance: juicefs-csi-driver
        app.kubernetes.io/name: juicefs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
      - args:
        - --endpoint=$(CSI_ENDPOINT)
        - --logtostderr
        - --nodeid=$(NODE_NAME)
        - --leader-election
        - --v=5
        - --webhook=true
        env:
        - name: CSI_ENDPOINT
          value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: JUICEFS_MOUNT_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: JUICEFS_MOUNT_PATH
          value: /var/lib/juicefs/volume
        - name: JUICEFS_CONFIG_PATH
          value: /var/lib/juicefs/config
        image: juicedata/juicefs-csi-driver:v0.22.1
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
        name: juicefs-plugin
        ports:
        - containerPort: 9909
          name: healthz
          protocol: TCP
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
        - mountPath: /jfs
          mountPropagation: Bidirectional
          name: jfs-dir
        - mountPath: /root/.juicefs
          mountPropagation: Bidirectional
          name: jfs-root-dir
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      - args:
        - --csi-address=$(ADDRESS)
        - --timeout=60s
        - --enable-leader-election
        - --v=5
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-provisioner:v1.6.0
        name: csi-provisioner
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --leader-election
        - --v=2
        env:
        - name: ADDRESS
          value: /var/lib/csi/sockets/pluginproxy/csi.sock
        image: quay.io/k8scsi/csi-resizer:v1.0.1
        name: csi-resizer
        volumeMounts:
        - mountPath: /var/lib/csi/sockets/pluginproxy/
          name: socket-dir
      - args:
        - --csi-address=$(ADDRESS)
        - --health-port=$(HEALTH_PORT)
        env:
        - name: ADDRESS
          value: /csi/csi.sock
        - name: HEALTH_PORT
          value: "9909"
        image: quay.io/k8scsi/livenessprobe:v1.1.0
        name: liveness-probe
        volumeMounts:
        - mountPath: /csi
          name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: juicefs-csi-controller-sa
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - emptyDir: {}
        name: socket-dir
      - hostPath:
          path: /var/lib/juicefs/volume
          type: DirectoryOrCreate
        name: jfs-dir
      - hostPath:
          path: /var/lib/juicefs/config
          type: DirectoryOrCreate
        name: jfs-root-dir
      - name: webhook-certs
        secret:
          secretName: juicefs-webhook-certs
  volumeClaimTemplates: []
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: juicefs-cert
  namespace: kube-system
spec:
  dnsNames:
  - juicefs-admission-webhook
  - juicefs-admission-webhook.kube-system
  - juicefs-admission-webhook.kube-system.svc
  duration: 43800h
  issuerRef:
    name: juicefs-selfsigned
  secretName: juicefs-webhook-certs
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: juicefs-selfsigned
  namespace: kube-system
spec:
  selfSigned: {}
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: csi.juicefs.com
spec:
  attachRequired: false
  podInfoOnMount: true
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: kube-system/juicefs-cert
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: juicefs-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: CA_BUNDLE
    service:
      name: juicefs-admission-webhook
      namespace: kube-system
      path: /juicefs/inject-v1-pod
  failurePolicy: Fail
  name: sidecar.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      juicefs.com/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: juicefs-csi-driver
    app.kubernetes.io/name: juicefs-csi-driver
    app.kubernetes.io/version: master
  name: sync-admission-webhook
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    caBundle: CA_BUNDLE
    service:
      name: sync-admission-webhook
      namespace: kube-system
      path: /sync/inject-v1-pod
  failurePolicy: Fail
  name: sync.inject.juicefs.com
  namespaceSelector:
    matchLabels:
      juicefs.com/enable-injection: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
  timeoutSeconds: 20
EOF
  # webhook-with-certmanager.yaml end

  cat ${tmpdir}/webhook-with-certmanager.yaml | sed -e "s/CA_BUNDLE/Cg==/g"
}

need_cmd() {
  if ! check_cmd "$1"; then
    err "need '$1' (command not found)"
  fi
}

check_cmd() {
  command -v "$1" >/dev/null 2>&1
}

ensure() {
  if ! "$@"; then err "command failed: $*"; fi
}

function main() {
  if [[ $# -eq 0 ]]; then
    print_usage
    exit 1
  fi

  action="help"
  withcertmanager="false"

  while [[ $# -gt 0 ]]; do
    case $1 in
    -h | --help | "-?")
      print_usage
      exit 0
      ;;
    install | help)
      action=$1
      ;;
    print | help)
      action=$1
      ;;
    gen-dev | help)
      action=$1
      ;;
    -c|--with-certmanager)
      withcertmanager="true"
      ;;
    *)
      echo "Error: unsupported option $1" >&2
      print_usage
      exit 1
      ;;
    esac
    shift
  done

  if [[ ${withcertmanager} == "true" ]]
  then
    case ${action} in
    install)
      gen_webhook_manifests_with_cert_manager | kubectl apply -f -
      ;;
    print)
      gen_webhook_manifests_with_cert_manager | cat
      ;;
    help)
      print_usage
      ;;
    esac
  else
    case ${action} in
    install)
      gen_webhook_manifests | kubectl apply -f -
      ;;
    print)
      gen_webhook_manifests | cat
      ;;
    gen-dev)
          gen_webhook_manifests | cat >./deploy-dev/k8s.yaml
          ;;
    help)
      print_usage
      ;;
    esac
  fi
}

main "$@"
